import requests
import json
import os

# Load API Key from environment variable or directly set it here
API_KEY = os.getenv("GOOGLE_SAFE_BROWSING_API_KEY") or "AIzaSyDtgCMpZdOCDWCUIkAzB41w-7MwA9iI3Vs"

# Google Safe Browsing API URL
SAFE_BROWSING_URL = "https://safebrowsing.googleapis.com/v4/threatMatches:find"

def check_malware(url):
    """
    Check if the given URL is flagged as malware or phishing.
    
    :param url: The website URL to check.
    :return: String message indicating the security status of the URL.
    """
    payload = {
        "client": {
            "clientId": "CyberSentinel",
            "clientVersion": "1.0"
        },
        "threatInfo": {
            "threatTypes": ["MALWARE", "SOCIAL_ENGINEERING"],
            "platformTypes": ["ANY_PLATFORM"],
            "threatEntryTypes": ["URL"],
            "threatEntries": [{"url": url}]
        }
    }

    response = requests.post(f"{SAFE_BROWSING_URL}?key={API_KEY}", json=payload)
    
    if response.status_code == 200:
        data = response.json()
        if "matches" in data:
            return f"üö® ALERT: The website '{url}' is flagged as **malicious** (malware or phishing)."
        else:
            return f"‚úÖ SAFE: The website '{url}' is **not flagged** as malicious."
    else:
        return f"‚ùå ERROR: Failed to check URL. HTTP Status: {response.status_code}"

# Example usage:
if __name__ == "__main__":
    test_url = "http://malicious-example.com"
    print(check_malware(test_url))
